version: "3.9"

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
     - "9091:9091"


  postgresdb:
    image: postgres:latest
    restart: always
    container_name: postgresdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"

  mongodb:
    image: mongo:latest
    restart: always
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: mongo
    ports:
      - "27017:27017"





#  persistence:
#    build:
#      context: ./
#      dockerfile: persistence/Dockerfile
#    ports:
#      - "8081:8081"
#    stdin_open: true
#    tty: true
#    container_name: persistence-service
#    environment:
#      PERSISTENCE_SERVICE_HOST: persistence-service
#      PERSISTENCE_SERVICE_PORT: 8081
#    working_dir: /fileio
#    volumes:
#      - ./:/fileio
#
#  core:
#    build:
#      context: ./
#      dockerfile: core/Dockerfile
#    ports:
#      - "8082:8082"
#    stdin_open: true
#    tty: true
#    container_name: core-service
#    depends_on:
#      - persistence
#    environment:
#      CORE_SERVICE_HOST: core-service
#      CORE_SERVICE_PORT: 8082
#
#  model:
#    build:
#      context: ./
#      dockerfile: model/Dockerfile
#    ports:
#      - "8080:8080"
#    stdin_open: true
#    tty: true
#    container_name: model-service
#    depends_on:
#      - persistence
#    environment:
#      CORE_SERVICE_HOST: model-service
#      CORE_SERVICE_PORT: 8080
#
#  tui:
#    build:
#      context: ./
#      dockerfile: tui/Dockerfile
#    ports:
#      - "8084:8084"
#    stdin_open: true
#    tty: true
#    container_name: tui-service
#    depends_on:
#      - persistence
#    environment:
#      CORE_SERVICE_HOST: tui-service
#      CORE_SERVICE_PORT: 8084
#
#  gui:
#    build:
#      context: ./
#      dockerfile: gui/Dockerfile
#    ports:
#      - "8083:8083"
#    stdin_open: true
#    tty: true
#    container_name: gui-service
#    depends_on:
#      - persistence
#    environment:
#      CORE_SERVICE_HOST: gui-service
#      CORE_SERVICE_PORT: 8083
#      DISPLAY: host.docker.internal:0
#    volumes:
#      - /tmp/.X11-unix:/tmp/.X11-unix
